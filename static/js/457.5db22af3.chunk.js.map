{"version":3,"file":"static/js/457.5db22af3.chunk.js","mappings":"qOAEMA,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gFACGC,EADH,uCAC6CD,EAD7C,oBACiEF,GADjE,SAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAKIA,GALJ,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGC,EADH,4DACmER,EADnE,kBACgFO,GADhF,SAGgBH,EAAAA,EAAAA,IAAUI,GAH1B,cAGGH,EAHH,yBAKIA,GALJ,kE,kHCZP,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oBAAhF,EAAgH,0BAAhH,EAAsJ,0B,SCMzII,EAAS,WAClB,IAGIF,EAHJ,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAIIR,EADoC,OAApCO,EAAaE,IAAI,qBAA+DC,IAApCH,EAAaE,IAAI,eAC/CF,EAAaE,IAAI,eAEjB,GAGlB,IAAME,GAAWC,EAAAA,EAAAA,MAwBjB,OAXAC,EAAAA,EAAAA,YAAU,WACc,OAAhBb,GAKJD,EAAAA,EAAAA,GAAaC,GAAac,MAAK,SAAAhB,GAC3BO,EAAUP,EAAKiB,KAAKC,QACvB,IAAEC,OAAO,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IANXb,EAAU,GAOjB,GAAE,CAACL,EAAaO,KAGb,iCACI,kBAAMa,UAAWC,EAAUC,SAxBd,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,OAAOC,MACvD,GAA0B,KAAtBJ,EAAWK,OAGX,OAFAtB,EAAgB,CAAC,QACjBuB,MAAM,aAGVvB,EAAgB,CAAER,YAAayB,GAClC,EAeO,WACE,kBACEO,KAAK,OACLC,aAAa,MACbC,KAAK,SACLC,WAAS,EACTC,YAAY,gBACZhB,UAAWC,KAEb,mBAAQD,UAAWC,EAASW,KAAK,SAAjC,wBAEF,eAAIZ,UAAWC,EAAf,SACIjB,EAAOiC,KAAI,SAACC,GAER,IAAIC,EAOP,OALOA,EADsB,OAAtBD,EAAME,YACM,uCAAyCF,EAAME,YAE/C,6CAIhB,eAAIpB,UAAWC,EAAf,UACI,UAAC,KAAD,CAAMoB,GAAE,UAAKH,EAAMI,IAAMC,MAAO,CAACC,KAAMjC,GAAvC,WACI,0BACI,gBAAKkC,IAAKN,EAAWO,IAAI,SAASC,MAAO,SAE7C,wBAAKT,EAAMU,YALgBV,EAAMI,GAS7C,QAIf,C","sources":["components/FetchMovie.js","webpack://react-homework-template/./src/page/Movies.module.css?c0dd","page/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nexport async function FeatchMovie(endPoint) {   \n    const API_URL = `https://api.themoviedb.org/3/${endPoint}?api_key=${KEY}`\n    \n    const resp = await axios.get(API_URL);\n\n    return resp;\n}\n\n\nexport async function FeatchSearch(searchQuery) {\n    const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${searchQuery}`;\n\n    const resp = await axios.get(BASE_URL);\n\n    return resp;\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Movies_Form__CPcFL\",\"Input\":\"Movies_Input__VkF2C\",\"Btn\":\"Movies_Btn__7pC3p\",\"ListMovie\":\"Movies_ListMovie__07TSA\",\"ItemMovie\":\"Movies_ItemMovie__ZLrmN\"};","import { FeatchSearch } from \"components/FetchMovie\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport css from './Movies.module.css';\n\nexport const Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    let searchQuery;\n    if (searchParams.get('searchQuery') !== null && searchParams.get('searchQuery') !== undefined) {\n        searchQuery = searchParams.get('searchQuery');\n    } else {\n        searchQuery = '';\n    }\n\n    const location = useLocation();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const inputValue = event.currentTarget.elements.search.value;\n        if (inputValue.trim() === '') {\n            setSearchParams({});\n            alert('oppsss...')\n            return;\n        }\n        setSearchParams({ searchQuery: inputValue });\n    };\n\n    useEffect(()=>{\n        if (searchQuery === null) {\n            setMovies([])\n            return;\n        }\n\n        FeatchSearch(searchQuery).then(resp => {\n            setMovies(resp.data.results);\n        }).catch( error => console.error(error))\n    }, [searchQuery, searchParams])\n\n    return(\n        <>\n            <form className={css.Form} onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                autoComplete=\"off\"\n                name=\"search\"\n                autoFocus\n                placeholder=\"Search Movies\"\n                className={css.Input}\n              />\n              <button className={css.Btn} type=\"submit\">Search</button>\n            </form>\n            <ul className={css.ListMovie}>\n               {movies.map((movie) => {\n\n                    let imagePath;\n                    if (movie.poster_path !== null) {\n                        imagePath = 'https://image.tmdb.org/t/p/original/' + movie.poster_path\n                    }else{\n                        imagePath = '/goit-react-hw-05-movies/images/image.jpg';\n                    }\n\n                 return(\n                    <li className={css.ItemMovie} key={movie.id}>\n                        <Link to={`${movie.id}`} state={{from: location}}>\n                            <div>\n                                <img src={imagePath} alt=\"poster\" width={350} />\n                            </div>\n                            <h3>{movie.title}</h3>\n                        </Link>\n                    </li>\n                 )\n               })}\n            </ul>\n        </>\n    )\n}"],"names":["KEY","FeatchMovie","endPoint","API_URL","axios","resp","FeatchSearch","searchQuery","BASE_URL","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","undefined","location","useLocation","useEffect","then","data","results","catch","error","console","className","css","onSubmit","event","preventDefault","inputValue","currentTarget","elements","search","value","trim","alert","type","autoComplete","name","autoFocus","placeholder","map","movie","imagePath","poster_path","to","id","state","from","src","alt","width","title"],"sourceRoot":""}