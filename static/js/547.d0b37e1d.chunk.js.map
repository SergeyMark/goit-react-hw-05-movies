{"version":3,"file":"static/js/547.d0b37e1d.chunk.js","mappings":"2NACA,EAA2B,uBAA3B,EAA6D,uB,SC8C7D,EAxCa,WACT,OAAyBA,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,IATAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAY,SAAD,OAAUH,EAAV,aAA6BI,MAAK,SAAAC,GAC3CN,EAAQM,EAAKC,KAAKR,KACnB,IACAS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,IAEgB,IAAhBF,EAAKa,OACL,MAAO,eAEP,IAGMC,EAHSd,EAAKe,QAClB,SAACC,EAAOC,GAAR,OAAkBA,IAAUjB,EAAKkB,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAMI,EAAnB,GAA5C,IAEwBC,KAAI,YAA4C,IAAzCD,EAAwC,EAAxCA,GAAIE,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACvD,OACE,gBAAIC,UAAWC,EAAf,WACE,gBACEC,IAAK,uCAAyCL,EAC9CM,IAAI,WAEN,uBAAIL,KACJ,uCAAeC,OANiBJ,EASrC,IACD,OACE,0BACE,eAAIK,UAAWC,EAAf,SAA8BZ,KAIzC,C,qHC3CKe,EAAM,mCAEL,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA2ByB,GAA3B,gFACGC,EADH,uCAC6CD,EAD7C,oBACiED,GADjE,SAGgBG,EAAAA,EAAAA,IAAUD,GAH1B,cAGGxB,EAHH,yBAKIA,GALJ,kEASA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGC,EADH,4DACmEN,EADnE,kBACgFK,GADhF,SAGgBF,EAAAA,EAAAA,IAAUG,GAH1B,cAGG5B,EAHH,yBAKIA,GALJ,kE","sources":["webpack://react-homework-template/./src/components/Cast.module.css?f72c","components/Cast.jsx","components/FetchMovie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ListCast\":\"Cast_ListCast__yHGoT\",\"ItemCast\":\"Cast_ItemCast__1aDPm\"};","import { FeatchMovie } from \"./FetchMovie\";\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n    const [cast, setCast ] = useState([]);\n\n    const { movieId } = useParams();\n\n    useEffect(()=>{\n        FeatchMovie(`movie/${movieId}/credits`).then(resp => {\n          setCast(resp.data.cast);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }, [movieId]);\n\n    if (cast.length === 0) {\n        return 'Opppssss....';\n      } else {\n        const actors = cast.filter(\n          (value, index) => index === cast.findIndex(v => v.id === value.id)\n        );\n        const actorItems = actors.map(({ id, profile_path, name, character }) => {\n          return (\n            <li className={css.ItemCast} key={id}>\n              <img\n                src={'https://image.tmdb.org/t/p/original/' + profile_path}\n                alt=\"Actor\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        });\n        return (\n          <div>\n            <ul className={css.ListCast}>{actorItems}</ul>\n          </div>\n        );\n      }    \n}\n\nexport default Cast;","import axios from 'axios';\n\nconst KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nexport async function FeatchMovie(endPoint) {   \n    const API_URL = `https://api.themoviedb.org/3/${endPoint}?api_key=${KEY}`\n    \n    const resp = await axios.get(API_URL);\n\n    return resp;\n}\n\n\nexport async function FeatchSearch(searchQuery) {\n    const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${searchQuery}`;\n\n    const resp = await axios.get(BASE_URL);\n\n    return resp;\n}\n\n\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","FeatchMovie","then","resp","data","catch","error","console","log","length","actorItems","filter","value","index","findIndex","v","id","map","profile_path","name","character","className","css","src","alt","KEY","endPoint","API_URL","axios","FeatchSearch","searchQuery","BASE_URL"],"sourceRoot":""}